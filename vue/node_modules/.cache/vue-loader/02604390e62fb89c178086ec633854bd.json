{"remainingRequest":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\GitHub\\smart-hotel\\vue\\src\\layout\\Layout.vue?vue&type=template&id=82a49174","dependencies":[{"path":"E:\\GitHub\\smart-hotel\\vue\\src\\layout\\Layout.vue","mtime":1751596655031},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDwhLS0gICAg5aS06YOoLS0+CiAgICA8SGVhZGVyIDp1c2VyPSJ1c2VyIi8+CiAgICA8IS0tICAgIOS4u+S9ky0tPgogICAgPGRpdiBzdHlsZT0iZGlzcGxheTogZmxleCI+CiAgICAgIDwhLS0gICAgICDkvqfovrnmoI8tLT4KICAgICAgPEFzaWRlIC8+CiAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogMTBweDtmbGV4OiAxIj4KICAgICAgICA8IS0tICAgICAg6Z2i5YyF5bGRLS0+CiAgICAgICAgICA8QnJlYWRjcnVtYiAvPgogICAgICAgIDwhLS0gICAgICDlhoXlrrnljLrln58tLT4KICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW46IDEwcHgiPgogICAgICAgICAgPHJvdXRlci12aWV3IEB1c2VySW5mbz0icmVmcmVzaFVzZXIiLz4KICAgICAgICAgIAogICAgICAgIDwvZGl2PgogICAgICAgIDxlbC1mb290ZXIKICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICBib3R0b206IDA7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBjb2xvcjogIzMzMzsKICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICAgICAgICBsaW5lLWhlaWdodDogMTAwcHg7CiAgICAgICAgICAgICI+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbjogLTIwcHg7Ij4KICAgICAgICAgICAgICAgIENvcHlyaWdodCDCqSAyMDI1LlhYWCBBbGwgcmlnaHRzIHJlc2VydmVkCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9lbC1mb290ZXI+CiAgICAgIDwvZGl2PgogICAgICAKICAgIDwvZGl2PgogICAgCiAgPC9kaXY+Cg=="},{"version":3,"sources":["E:\\GitHub\\smart-hotel\\vue\\src\\layout\\Layout.vue"],"names":[],"mappings":"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","file":"E:/GitHub/smart-hotel/vue/src/layout/Layout.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <!--    头部-->\n    <Header :user=\"user\"/>\n    <!--    主体-->\n    <div style=\"display: flex\">\n      <!--      侧边栏-->\n      <Aside />\n      <div style=\"margin: 10px;flex: 1\">\n        <!--      面包屑-->\n          <Breadcrumb />\n        <!--      内容区域-->\n        <div style=\"margin: 10px\">\n          <router-view @userInfo=\"refreshUser\"/>\n          \n        </div>\n        <el-footer\n            style=\"\n            bottom: 0;\n            width: 100%;\n            color: #333;\n            text-align: center;\n            line-height: 100px;\n            \">\n            <div style=\"margin: -20px;\">\n                Copyright © 2025.XXX All rights reserved\n            </div>\n          </el-footer>\n      </div>\n      \n    </div>\n    \n  </div>\n</template>\n\n<script>\nimport Header from \"@/components/Header\";\nimport Aside from \"@/components/Aside\";\nimport Breadcrumb from \"@/components/Breadcrumb\"\nimport request from \"@/utils/request\";\n\nexport default {\n  name: \"Layout\",\n  components: {\n    Header,\n    Aside,\n    Breadcrumb\n  },\n  data() {\n    return {\n      user: {}\n    }\n  },\n  created() {\n    this.refreshUser()\n  },\n  methods: {\n    refreshUser() {\n      let userJson = sessionStorage.getItem(\"user\");\n      if (!userJson) {\n        return\n      }\n      let userId = JSON.parse(userJson).id\n      // 从后台取出更新后的最新用户信息\n      request.get(\"/user/\" + userId).then(res => {\n        this.user = res.data\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}