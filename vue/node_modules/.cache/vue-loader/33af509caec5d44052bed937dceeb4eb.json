{"remainingRequest":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts4.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts4.vue","mtime":1677826011175},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7CgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6J2VjaGFydHM0JywKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7fTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGRyYXdDaGFydHMoKSB7CiAgICAgICAgLy/liJ3lp4vljJZlaGNoYXJ0c+WunuS+iwogICAgICAgIGxldCBteUNoYXJ0PXRoaXMuJHJvb3QuZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJib3gyIikpOwogICAgICAgIC8v5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uCiAgICAgICAgbGV0IG9wdGlvbiA9IHsKICAgICAgICAgICAgdGl0bGU6ewogICAgICAgICAgICAgICAgdGV4dDon6YWS5bqX5LiL5Y2V57uf6K6hJwogICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgICAgICAgIHR5cGU6ICdjcm9zcycsCiAgICAgICAgICAgICAgICAgIGNyb3NzU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyM5OTknCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRvb2xib3g6IHsKICAgICAgICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgbWFyazoge3Nob3c6IHRydWV9LAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhVmlldzoge3Nob3c6IHRydWUsIHJlYWRPbmx5OiBmYWxzZX0sCiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3RvcmU6IHtzaG93OiB0cnVlfSwKICAgICAgICAgICAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHtzaG93OiB0cnVlfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgICAgICBpY29uOiAncmVjdCcsLy/lvaLnirYgIOexu+Wei+WMheaLrCBjaXJjbGXvvIxyZWN0LGxpbmXvvIxyb3VuZFJlY3TvvIx0cmlhbmdsZe+8jGRpYW1vbmTvvIxwaW7vvIxhcnJvd++8jG5vbmUKICAgICAgICAgICAgICAgIGl0ZW1XaWR0aDogMTAsICAvLyDorr7nva7lrr3luqYKICAgICAgICAgICAgICAgIGl0ZW1IZWlnaHQ6IDQsIC8vIOiuvue9rumrmOW6pgogICAgICAgICAgICAgICAgaXRlbUdhcDogMjQsIC8vIOiuvue9rumXtOi3nQogICAgICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgLy/mloflrZfmoLflvI8KICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNjMWRhZmMnLAogICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAnMTInCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgcmlnaHQ6ICczMCUnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB4QXhpczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknLAogICAgICAgICAgICAgICAgICBkYXRhOiBbXSwKICAgICAgICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2hhZG93JwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICB5QXhpczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICB0eXBlOiAndmFsdWUnLAogICAgICAgICAgICAgICAgICBpbnRlcnZhbDogMSwKICAgICAgICAgICAgICAgICAgYXhpc0xhYmVsOiB7CiAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVyOiAne3ZhbHVlfScKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgc2VyaWVzOiBbCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICfkuIvljZXkurrmlbAnLAogICAgICAgICAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgICAgICAgICAgYmFyV2lkdGg6ICc1JScsCiAgICAgICAgICAgICAgICAgIGRhdGE6IFtdCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICBjb2xvcjogWycjYjFkZTZhJywgJyM0YWIwZWUnXQogICAgICAgICAgICB9OwoKCiAgICAgICAgcmVxdWVzdC5nZXQoIi9jb250cmFjdC9jb3VudCIpLnRoZW4ocmVzID0+IHsKICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAnKSB7CiAgICAgICAgICAgIHJlcy5kYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAgICAgb3B0aW9uLnNlcmllc1swXS5kYXRhLnB1c2goaXRlbS5jb3VudCk7CiAgICAgICAgICAgICAgb3B0aW9uLnhBeGlzWzBdLmRhdGEucHVzaChpdGVtLm5hbWUpCiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC8vIOe7mOWItuWbvuihqAogICAgICAgICAgICBteUNoYXJ0LnNldE9wdGlvbihvcHRpb24pOwogICAgICAgICAgfQogICAgICB9KQogICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuZHJhd0NoYXJ0cygpOwogICAgfSwKICB9OwogICAgCg=="},{"version":3,"sources":["E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts4.vue"],"names":[],"mappings":"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","file":"E:/GitHub/smart-hotel/vue/src/components/echarts/echarts4.vue","sourceRoot":"","sourcesContent":["<template>\n    <div id=\"box2\" :style=\"{width: '700px', height: '400px'}\"></div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\n  export default {\n    name:'echarts4',\n    data() {\n      return {};\n    },\n    methods: {\n      drawCharts() {\n        //初始化ehcharts实例\n        let myChart=this.$root.echarts.init(document.getElementById(\"box2\"));\n        //指定图表的配置项和数据\n        let option = {\n            title:{\n                text:'酒店下单统计'\n            },\n              tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                  type: 'cross',\n                  crossStyle: {\n                    color: '#999'\n                  }\n                }\n              },\n              toolbox: {\n                    show: true,\n                    feature: {\n                        mark: {show: true},\n                        dataView: {show: true, readOnly: false},\n                        restore: {show: true},\n                        saveAsImage: {show: true}\n                    }\n                },\n              legend: {\n                icon: 'rect',//形状  类型包括 circle，rect,line，roundRect，triangle，diamond，pin，arrow，none\n                itemWidth: 10,  // 设置宽度\n                itemHeight: 4, // 设置高度\n                itemGap: 24, // 设置间距\n                trigger: 'item',\n                textStyle: {\n                    //文字样式\n                    color: '#c1dafc',\n                    fontSize: '12'\n                },\n                right: '30%'\n              },\n              xAxis: [\n                {\n                  type: 'category',\n                  data: [],\n                  axisPointer: {\n                    type: 'shadow'\n                  }\n                }\n              ],\n              yAxis: [\n                {\n                  type: 'value',\n                  interval: 1,\n                  axisLabel: {\n                    formatter: '{value}'\n                  }\n                }\n              ],\n              series: [\n                {\n                  name: '下单人数',\n                  type: 'bar',\n                  barWidth: '5%',\n                  data: []\n                }\n              ],\n              color: ['#b1de6a', '#4ab0ee']\n            };\n\n\n        request.get(\"/contract/count\").then(res => {\n          if (res.code === '0') {\n            res.data.forEach(item => {\n              option.series[0].data.push(item.count);\n              option.xAxis[0].data.push(item.name)\n            })\n            // 绘制图表\n            myChart.setOption(option);\n          }\n      })\n    }\n    },\n    mounted() {\n      this.drawCharts();\n    },\n  };\n    \n</script>"]}]}