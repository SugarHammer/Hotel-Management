{"remainingRequest":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts2.vue?vue&type=template&id=b72df506","dependencies":[{"path":"E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts2.vue","mtime":1653969029000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0iY2hhcnR0ZXN0Ij4KICAgIDxkaXYgOnN0eWxlPSJ7d2lkdGg6ICc3MDBweCcsIGhlaWdodDogJzQwMHB4J30iIDppZD0iZWNoYXJ0cyIgY2xhc3M9ImVjaGFydHMiIHJlZj0iZWNoYXJ0cyI+CiAgICA8L2Rpdj4KICA8L2Rpdj4K"},{"version":3,"sources":["E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts2.vue"],"names":[],"mappings":";EAEE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"E:/GitHub/smart-hotel/vue/src/components/echarts/echarts2.vue","sourceRoot":"","sourcesContent":["<!-- echartscom.vue -->\n<template>\n  <div class=\"charttest\">\n    <div :style=\"{width: '700px', height: '400px'}\" :id=\"echarts\" class=\"echarts\" ref=\"echarts\">\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport request from \"@/utils/request\";\n\n  export default {\n    name:'echarts2',\n    data() {\n      return {};\n    },\n    methods: {\n      drawCharts() {\n        let myChart = this.$root.echarts.init(document.getElementById(this.echarts));\n        let option = {\n          title: {\n            text: '报修反馈比例统计图',\n            subtext: '虚拟数据',\n            left: 'left'\n          },\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            trigger: 'item',\n            orient: 'vertical',\n            x:'right',      //可设定图例在左、右、居中\n            y:'center',     //可设定图例在上、下、居中\n            padding:[0,50,0,0],\n          },\n          toolbox: {\n            show: true,\n            feature: {\n                mark: {show: true},\n                dataView: {show: true, readOnly: false},\n                restore: {show: true},\n                saveAsImage: {show: true}\n            }\n          },\n          series: [\n            {\n              name: '维修情况',\n              type: 'pie',\n              radius: ['50%', '70%'],\n              avoidLabelOverlap: false,\n              label: {\n                normal: {\n                  show: false,\n                  position: 'center'\n                },\n                emphasis: {\n                  show: true,\n                  textStyle: {\n                    fontSize: '30',\n                    fontWeight: 'bold'\n                  }\n                }\n              },\n              labelLine: {\n                normal: {\n                  show: false\n                }\n              },\n              data: []\n            }\n          ]\n        };\n        request.get(\"/engineer/count\").then(res => {\n        if (res.code === '0') {\n          res.data.forEach(item => {\n            option.series[0].data.push({name: item.state, value: item.count})\n          })\n          // 绘制图表\n          myChart.setOption(option);\n        }\n      })\n      }\n    },\n    computed: {\n      echarts() {\n        return 'echarts' + Math.random() * 100000;\n      }\n    },\n    mounted() {\n      this.drawCharts();\n    },\n  };\n</script>\n\n<style></style>"]}]}