{"remainingRequest":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\babel-loader\\lib\\index.js!E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts1.vue?vue&type=script&lang=js","dependencies":[{"path":"E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts1.vue","mtime":1653969029000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\GitHub\\smart-hotel\\vue\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCByZXF1ZXN0IGZyb20gIkAvdXRpbHMvcmVxdWVzdCI7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZHJhd0xpbmUoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXdMaW5lOiBmdW5jdGlvbiBkcmF3TGluZSgpIHsKICAgICAgLy8g5Z+65LqO5YeG5aSH5aW955qEZG9t77yM5Yid5aeL5YyWZWNoYXJ0c+WunuS+iwogICAgICB2YXIgbXlDaGFydCA9IHRoaXMuJHJvb3QuZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdteUNoYXJ0JykpOwogICAgICB2YXIgb3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0OiAn5ZCE5Zyw5Yy655So5oi35q+U5L6L57uf6K6h5Zu+JywKICAgICAgICAgIHN1YnRleHQ6ICfomZrmi5/mlbDmja4nLAogICAgICAgICAgbGVmdDogJ2xlZnQnCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScKICAgICAgICB9LAogICAgICAgIGxlZ2VuZDogewogICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgeDogJ3JpZ2h0JywKICAgICAgICAgIHk6ICdjZW50ZXInLAogICAgICAgICAgcGFkZGluZzogWzAsIDUwLCAwLCAwXQogICAgICAgIH0sCiAgICAgICAgdG9vbGJveDogewogICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgbWFyazogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YVZpZXc6IHsKICAgICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICAgIHJlYWRPbmx5OiBmYWxzZQogICAgICAgICAgICB9LAogICAgICAgICAgICByZXN0b3JlOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICB9LAogICAgICAgICAgICBzYXZlQXNJbWFnZTogewogICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgbmFtZTogJ+eUqOaIt+avlOS+iycsCiAgICAgICAgICB0eXBlOiAncGllJywKICAgICAgICAgIHJhZGl1czogWzUwLCAxNTBdLAogICAgICAgICAgY2VudGVyOiBbJzUwJScsICc1MCUnXSwKICAgICAgICAgIHJvc2VUeXBlOiAnYXJlYScsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgYm9yZGVyUmFkaXVzOiA0CiAgICAgICAgICB9LAogICAgICAgICAgZGF0YTogW10KICAgICAgICB9XQogICAgICB9OwogICAgICByZXF1ZXN0LmdldCgiL3VzZXIvY291bnQiKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwJykgewogICAgICAgICAgcmVzLmRhdGEuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICBvcHRpb24uc2VyaWVzWzBdLmRhdGEucHVzaCh7CiAgICAgICAgICAgICAgbmFtZTogaXRlbS5hZGRyZXNzLAogICAgICAgICAgICAgIHZhbHVlOiBpdGVtLmNvdW50CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSk7IC8vIOe7mOWItuWbvuihqAoKICAgICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["E:\\GitHub\\smart-hotel\\vue\\src\\components\\echarts\\echarts1.vue"],"names":[],"mappings":";AAKA,OAAO,OAAP,MAAoB,iBAApB;AAEA,eAAe;AACb,EAAA,IADa,kBACN;AACL,WAAO,EAAP;AACD,GAHY;AAIb,EAAA,OAJa,qBAIH;AACR,SAAK,QAAL;AACD,GANY;AAOb,EAAA,OAAO,EAAE;AACP,IAAA,QADO,sBACI;AACT;AACA,UAAI,OAAM,GAAI,KAAK,KAAL,CAAW,OAAX,CAAmB,IAAnB,CAAwB,QAAQ,CAAC,cAAT,CAAwB,SAAxB,CAAxB,CAAd;AACA,UAAI,MAAK,GAAI;AACX,QAAA,KAAK,EAAE;AACL,UAAA,IAAI,EAAE,YADD;AAEL,UAAA,OAAO,EAAE,MAFJ;AAGL,UAAA,IAAI,EAAE;AAHD,SADI;AAMX,QAAA,OAAO,EAAE;AACP,UAAA,OAAO,EAAE;AADF,SANE;AASX,QAAA,MAAM,EAAE;AACN,UAAA,OAAO,EAAE,MADH;AAEN,UAAA,MAAM,EAAE,UAFF;AAGN,UAAA,CAAC,EAAC,OAHI;AAIN,UAAA,CAAC,EAAC,QAJI;AAKN,UAAA,OAAO,EAAC,CAAC,CAAD,EAAG,EAAH,EAAM,CAAN,EAAQ,CAAR;AALF,SATG;AAgBX,QAAA,OAAO,EAAE;AACP,UAAA,IAAI,EAAE,IADC;AAEP,UAAA,OAAO,EAAE;AACP,YAAA,IAAI,EAAE;AAAC,cAAA,IAAI,EAAE;AAAP,aADC;AAEP,YAAA,QAAQ,EAAE;AAAC,cAAA,IAAI,EAAE,IAAP;AAAa,cAAA,QAAQ,EAAE;AAAvB,aAFH;AAGP,YAAA,OAAO,EAAE;AAAC,cAAA,IAAI,EAAE;AAAP,aAHF;AAIP,YAAA,WAAW,EAAE;AAAC,cAAA,IAAI,EAAE;AAAP;AAJN;AAFF,SAhBE;AAyBX,QAAA,MAAM,EAAE,CACN;AACE,UAAA,IAAI,EAAE,MADR;AAEE,UAAA,IAAI,EAAE,KAFR;AAGE,UAAA,MAAM,EAAE,CAAC,EAAD,EAAK,GAAL,CAHV;AAIE,UAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJV;AAKE,UAAA,QAAQ,EAAE,MALZ;AAME,UAAA,SAAS,EAAE;AACT,YAAA,YAAY,EAAE;AADL,WANb;AASE,UAAA,IAAI,EAAE;AATR,SADM;AAzBG,OAAb;AAuCA,MAAA,OAAO,CAAC,GAAR,CAAY,aAAZ,EAA2B,IAA3B,CAAgC,UAAA,GAAE,EAAK;AACrC,YAAI,GAAG,CAAC,IAAJ,KAAa,GAAjB,EAAsB;AACpB,UAAA,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,UAAA,IAAG,EAAK;AACvB,YAAA,MAAM,CAAC,MAAP,CAAc,CAAd,EAAiB,IAAjB,CAAsB,IAAtB,CAA2B;AAAC,cAAA,IAAI,EAAE,IAAI,CAAC,OAAZ;AAAqB,cAAA,KAAK,EAAE,IAAI,CAAC;AAAjC,aAA3B;AACD,WAFD,EADoB,CAIpB;;AACA,UAAA,OAAO,CAAC,SAAR,CAAkB,MAAlB;AACF;AACD,OARD;AAUF;AArDO;AAPI,CAAf","sourcesContent":["<template>\n    <div id=\"myChart\" :style=\"{width: '700px', height: '400px'}\"></div>\n</template>\n\n<script>\nimport request from \"@/utils/request\";\n\nexport default {\n  data() {\n    return {}\n  },\n  mounted() {\n    this.drawLine();\n  },\n  methods: {\n    drawLine() {\n      // 基于准备好的dom，初始化echarts实例\n      let myChart = this.$root.echarts.init(document.getElementById('myChart'))\n      let option = {\n        title: {\n          text: '各地区用户比例统计图',\n          subtext: '虚拟数据',\n          left: 'left'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          trigger: 'item',\n          orient: 'vertical',\n          x:'right',  \n          y:'center', \n          padding:[0,50,0,0],\n        },\n        toolbox: {\n          show: true,\n          feature: {\n            mark: {show: true},\n            dataView: {show: true, readOnly: false},\n            restore: {show: true},\n            saveAsImage: {show: true}\n          }\n        },\n        series: [\n          {\n            name: '用户比例',\n            type: 'pie',\n            radius: [50, 150],\n            center: ['50%', '50%'],\n            roseType: 'area',\n            itemStyle: {\n              borderRadius: 4\n            },\n            data: []\n          }\n        ]\n      }\n      request.get(\"/user/count\").then(res => {\n        if (res.code === '0') {\n          res.data.forEach(item => {\n            option.series[0].data.push({name: item.address, value: item.count})\n          })\n          // 绘制图表\n          myChart.setOption(option);\n        }\n      })\n\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}